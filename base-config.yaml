api_key: somestring

# api endpoint to connect to. you probably don't want to change this.
api_endpoint: https://sometenant-openai.openai.azure.com/openai/deployments/gpt-4o/chat/completions?api-version=2024-02-15-preview

# The maximum number of tokens to generate in the chat completion.
# Leave blank to allow unlimited response length.
# Note that is max_tokens + tokens in the input must be less than model's maximum context.
max_tokens:

# The maximum number of words allowed to in the input.
# This includes the system prompt, additional context, and previous messages.
# On average, there are 1.2 tokens per word.
max_words: 1000

# Maximum number of previous messages to include in input.
# Usually max_words is reached before max_context_messages.
max_context_messages: 20

# What sampling temperature to use, between 0 and 2.
# Higher values like 0.8 will make the output more random,
# while lower values like 0.2 will make it more focused and deterministic
temperature: 1

# allowed users who can make calls to the openAI APIs. an empty list
# means everyone is allowed. regex is supported, e.g. to allow anyone from
# your homeserver, use '^@.*:myhomeserver.tld$'. always wrap everything in
# single-quotes when you can, but don't worry if maubot removes them.
allowed_users: []

# your bot's name, for reference. leave blank to use mxid localpart
# set this to a specific value if the bot's mxid localpart does not
# match their display nick, as clients tend to use the display nick in
# message bodies when using tab-completion.
# this is used as the trigger to get your bots attention in rooms with
# more than one user in them
name: ''

# Reply to queries in a thread and keep context within that thread.
reply_in_thread: True

# whether to enable multi-user awareness. this prefixes every context message
# with the display name of the sender of that message, and adds a system prompt
# informing the model of that fact. this increases personal data shared with
# openAI as well as your used token count, but makes the bot work a little better
# in multi-person chat rooms
enable_multi_user: true

# how to minimally train your bot. use this to adjust your bot's behavior.
# you can use the {name} and {timestamp} variables in this text.
system_prompt: |
    You are a friendly assistant named {name}. 
    The current datetime is {timestamp}, and this can be used reliably to 
    answer questions related to dates and times.
    Answer concisely.

# additional context to provide in the prompts.
# keep in mind this counts towards max_context_messages,
# so leave room here to include previous questions and context.
# refer to documentation about zero-shot, one-shot, and few-shot prompts.
# leave this an empty list to skip it altogether.
addl_context: 
  - role: user
    content: What does TLA stand for?
  - role: assistant
    content: |
        TLA stands for 'Three Letter Acronym'. It is a self-referrential joke
        used at large agencies and companies where acronyms are abundant.
